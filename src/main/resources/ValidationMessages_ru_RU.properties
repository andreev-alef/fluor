javax.validation.constraints.AssertFalse.message = \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C false.
javax.validation.constraints.AssertTrue.message  = \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C true.
javax.validation.constraints.DecimalMax.message  = \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 ${inclusive \=\= true ? '\u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 ${inclusive \=\= true ? '\u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E ' : ''}{value}
javax.validation.constraints.Digits.message      = \u0427\u0438\u0441\u043B\u043E\u0432\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0432\u044B\u0445\u043E\u0434\u0438\u0442 \u0437\u0430 \u0433\u0440\u0430\u043D\u0438\u0446\u044B  (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = \u0412\u044B\u0431\u0440\u0430\u043D\u043D\u0430\u044F \u0434\u0430\u0442\u0430 \u0434\u043E\u043B\u0436\u043D\u0430 \u0431\u044B\u0442\u044C \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043C
javax.validation.constraints.Max.message         = \u0414\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u0435\u043D {value}
javax.validation.constraints.Min.message         = \u0414\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u0435\u043D {value}
javax.validation.constraints.NotNull.message     = \u041D\u0435 \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C
javax.validation.constraints.Null.message        = \u0414\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C
javax.validation.constraints.Past.message        = \u0412\u044B\u0431\u0440\u0430\u043D\u043D\u0430\u044F \u0434\u0430\u0442\u0430 \u0435\u0449\u0435 \u043D\u0435 \u043D\u0430\u0441\u0442\u0443\u043F\u0438\u043B\u0430.
javax.validation.constraints.Pattern.message     = \u0414\u043E\u043B\u0436\u0435\u043D \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C "{regexp}"
javax.validation.constraints.Size.message        = \u0420\u0430\u0437\u043C\u0435\u0440 \u0434\u043E\u043B\u0436\u0435\u043D \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u044C\u0441\u044F \u0432 \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B\u0435 \u043E\u0442 {min} \u0434\u043E {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043A\u0440\u0435\u0434\u0438\u0442\u043D\u043E\u0439 \u043A\u0430\u0440\u0442\u044B
org.hibernate.validator.constraints.EAN.message                   = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = \u041D\u0435\u0432\u0435\u0440\u043D\u043E \u0441\u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 Email \u0430\u0434\u0440\u0435\u0441
org.hibernate.validator.constraints.Length.message                  = \u0414\u043B\u0438\u043D\u0430 \u0434\u043E\u043B\u0436\u043D\u0430 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u044C\u0441\u044F \u0432 \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B\u0435 \u043E\u0442 {min} \u0434\u043E {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${value} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${value} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${value} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${value} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = may not be empty
org.hibernate.validator.constraints.NotEmpty.message                = may not be empty
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message                     = must be a valid URL

org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number

# ==============================================================================
# Custom Errors
# ==============================================================================
FioAnnotation.error= \u0412 \u043F\u043E\u043B\u0435 \u0432\u0432\u0435\u0434\u0435\u043D\u044B \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0441\u0438\u043C\u0432\u043E\u043B\u044B.
PhoneAnnotation.error=\u041D\u0435\u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430.
PhoneAnnotation.illegalCharError=\u0412\u0432\u0435\u0434\u0435\u043D \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0441\u0438\u043C\u0432\u043E\u043B.
FioAnnotation.illegalCharSpaceError=\u0412\u0432\u0435\u0434\u0435\u043D\u044B \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0441\u0438\u043C\u0432\u043E\u043B\u044B \u043F\u043E\u0441\u043B\u0435 \u043F\u0440\u043E\u0431\u0435\u043B\u0430.
FioAnnotation.illegalCharDef=\u0412\u0432\u0435\u0434\u0435\u043D\u044B \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0441\u0438\u043C\u0432\u043E\u043B\u044B \u043F\u043E\u0441\u043B\u0435 \u0434\u0435\u0444\u0438\u0441\u0430.
FioAnnotation.illegalFirstChar=\u0412\u0432\u0435\u0434\u0435\u043D \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u043F\u0435\u0440\u0432\u044B\u0439 \u0441\u0438\u043C\u0432\u043E\u043B.
FioAnnotation.illegalLastChar=\u0412\u0432\u0435\u0434\u0435\u043D \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u0441\u0438\u043C\u0432\u043E\u043B.
FioAnnotation.glasnReq=\u0414\u043E\u043B\u0436\u043D\u043E \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0445\u043E\u0442\u044F\u0431\u044B \u043E\u0434\u043D\u0443 \u0433\u043B\u0430\u0441\u043D\u0443\u044E \u0431\u0443\u043A\u0432\u0443.
DateAnnotation.Before=\u041D\u0435 \u0434\u043E\u043B\u0436\u043D\u0430 \u0431\u044B\u0442\u044C \u0440\u0430\u043D\u044C\u0448\u0435 {min}\u0433.
